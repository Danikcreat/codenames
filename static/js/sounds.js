/**
 * –ó–≤—É–∫–æ–≤–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –¥–ª—è –∏–≥—Ä—ã Codenames
 */

// –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–≤—É–∫–∞–º–∏
class SoundManager {
    constructor() {
        this.sounds = {};
        this.muted = false;
        this.initialized = false;
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ localStorage
        this.loadSettings();
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–≤—É–∫–æ–≤
    init() {
        if (this.initialized) return;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–≤—É–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
        this.registerSound('card_reveal_red', '/static/sounds/click.wav');
        this.registerSound('card_reveal_blue', '/static/sounds/click.wav');
        this.registerSound('card_reveal_neutral', '/static/sounds/click.wav');
        this.registerSound('card_reveal_assassin', '/static/sounds/click.wav');
        this.registerSound('turn_change', '/static/sounds/turn_change.mp3');
        this.registerSound('game_win', '/static/sounds/win.wav');
        this.registerSound('game_lose', '/static/sounds/over.mp3');
        
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–≤—É–∫–æ–º
        this.createSoundControl();
        
        this.initialized = true;
        console.log('Sound manager initialized');
    }
    
    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–≤—É–∫–∞
    registerSound(name, path) {
        this.sounds[name] = new Audio(path);
        this.sounds[name].preload = 'auto';
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–≤—É–∫–æ–≤
        this.sounds[name].onerror = () => {
            console.error(`Failed to load sound: ${path}`);
        };
        
        console.log(`Registered sound: ${name}`);
    }
    
    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞
    play(name) {
        if (this.muted || !this.sounds[name]) return;
        
        try {
            // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–≤—É–∫, –µ—Å–ª–∏ –æ–Ω —É–∂–µ –∏–≥—Ä–∞–µ—Ç
            this.sounds[name].pause();
            this.sounds[name].currentTime = 0;
            
            // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫
            this.sounds[name].play().catch(error => {
                console.error(`Error playing sound ${name}:`, error);
            });
        } catch (error) {
            console.error(`Error playing sound ${name}:`, error);
        }
    }
    
    // –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞
    toggleMute() {
        this.muted = !this.muted;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É
        const soundIcon = document.getElementById('sound-icon');
        if (soundIcon) {
            soundIcon.textContent = this.muted ? 'üîá' : 'üîä';
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        this.saveSettings();
        
        console.log(`Sound ${this.muted ? 'muted' : 'unmuted'}`);
    }
    
    // –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–≤—É–∫–æ–º
    createSoundControl() {
        const gameControls = document.querySelector('.game-controls');
        if (!gameControls) return;
        
        const soundButton = document.createElement('button');
        soundButton.id = 'sound-toggle';
        soundButton.className = 'btn sound-btn';
        soundButton.innerHTML = `<span id="sound-icon">${this.muted ? 'üîá' : 'üîä'}</span>`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –Ω–∞—á–∞–ª–æ –±–ª–æ–∫–∞ game-controls
        gameControls.insertBefore(soundButton, gameControls.firstChild);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è
        soundButton.addEventListener('click', () => {
            this.toggleMute();
        });
    }
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    saveSettings() {
        localStorage.setItem('codenames_sound_muted', this.muted);
    }
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    loadSettings() {
        const muted = localStorage.getItem('codenames_sound_muted');
        if (muted !== null) {
            this.muted = muted === 'true';
        }
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∑–≤—É–∫–æ–≤
const soundManager = new SoundManager();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    soundManager.init();
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞ –ø—Ä–∏ —Ä–∞—Å–∫—Ä—ã—Ç–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏
function playCardSound(color) {
    switch (color) {
        case 'red':
            soundManager.play('card_reveal_red');
            break;
        case 'blue':
            soundManager.play('card_reveal_blue');
            break;
        case 'neutral':
            soundManager.play('card_reveal_neutral');
            break;
        case 'assassin':
            soundManager.play('card_reveal_assassin');
            break;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —Ö–æ–¥–∞
function playTurnChangeSound() {
    soundManager.play('turn_change');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞ –ø—Ä–∏ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –∏–≥—Ä—ã
function playGameEndSound(isWinner) {
    soundManager.play(isWinner ? 'game_win' : 'game_lose');
}